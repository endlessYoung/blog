import{_ as s,c as a,o as n,N as l}from"./chunks/framework.294d0221.js";const p="/blog/maven.png",e="/blog/1.png",o="/blog/2.png",t="/blog/3.png",r="/blog/4.png",c="/blog/5.png",i="/blog/7.png",y="/blog/6.png",D="/blog/8.png",F="/blog/9.png",m="/blog/10.png",d="/blog/11.png",C="/blog/12.png",A="/blog/13.png",b="/blog/14.png",g="/blog/15.png",u="/blog/16.png",v="/blog/17.png",I=JSON.parse('{"title":"使用Servlet写一个hello world","description":"","frontmatter":{},"headers":[],"relativePath":"page/2.md","lastUpdated":1680523914000}'),h={name:"page/2.md"},_=l('<h1 id="使用servlet写一个hello-world" tabindex="-1">使用Servlet写一个hello world <a class="header-anchor" href="#使用servlet写一个hello-world" aria-label="Permalink to &quot;使用Servlet写一个hello world&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>使用<code>Servlet</code>创建一个hello world程序需要完成的细节蛮多的，大致分为7步</p></div><h2 id="_1-创建项目" tabindex="-1">1. 创建项目 <a class="header-anchor" href="#_1-创建项目" aria-label="Permalink to &quot;1. 创建项目&quot;">​</a></h2><p>首先创建一个Maven <img src="'+p+'" alt="An image"></p><p>填写项目的名字和保存目录</p><p>这里项目的名称是<code>ServletCSDN</code></p><p><img src="'+e+'" alt="An image"></p><p>项目创建好之后，可以看到IDEA给我们创建出了一些目录结构</p><table><thead><tr><th>src</th><th>放源代码</th></tr></thead><tbody><tr><td>main</td><td>放正式代码</td></tr><tr><td>java</td><td>放Java代码</td></tr><tr><td>resources</td><td>放依赖的资源</td></tr><tr><td>test</td><td>放测试代码</td></tr><tr><td>pom.xml</td><td>这个是maven项目的核心配置文件，maven的相关属性就是这里配置的</td></tr></tbody></table><p><img src="'+o+'" alt="An image"></p><h2 id="_2-引入依赖" tabindex="-1">2. 引入依赖 <a class="header-anchor" href="#_2-引入依赖" aria-label="Permalink to &quot;2. 引入依赖&quot;">​</a></h2><p>Maven 项目创建完毕后, 会自动生成一个 <strong>pom.xml</strong> 文件。 我们需要在 <strong>pom.xml</strong> 中引入 Servlet API 依赖的 <strong>jar</strong> 包。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>下载第三方库的时候，有一下三种方法</p><ol><li>直接去第三方网站下载</li><li>去第三方的<code>github</code>上下载</li><li>去中央仓库下载</li></ol></div><p>我们一般常用的比较方便的是第三种<a href="https://mvnrepository.com/" target="_blank" rel="noreferrer">中央仓库</a>下载。 直接在上面搜索框中搜索servlet点击进入第一个<code>Java Servlet API</code><img src="'+t+'" alt="An image"></p><p>在其中选择你想要下载的版本（注意：<strong>Servlet</strong>的版本需要和<strong>Tomcat</strong>的版本对应），然后点击进入，复制配置文件。 <img src="'+r+'" alt="An image"><img src="'+c+'" alt="An image"> Servlet 和 Tomcat 版本对应图(本人的Tomcat版本是9.0.0+，所以选择4.0.0的依赖) <img src="'+i+'" alt="An image"></p><p>将刚才复制好的配置文件粘贴到maven项目的<code>pom.xml</code>中 <img src="'+y+`" alt="An image"></p><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependencies</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">javax.servlet</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">javax.servlet-api</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">4.0.0</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">scope</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">provided</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">scope</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependencies</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>如果报红可以刷新一下maven <img src="`+D+'" alt="An image"></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果将配置粘贴进去点击<code>maven</code>刷新后，<code>maven clean</code>和<code>maven install</code>都运行了之后，所粘贴的内容依然为红色，显示未找到依赖项，那么请检查maven的仓库是否已经下载好对应的包。 如果没有的话在 maven 官网下载与 jdk 对应的 maven 安装包。 如果仍然报错，可以尝试将 maven/conf 中的 <strong>setting.xml</strong> 的镜像源配置更改为阿里云的镜像源。</p></div><h2 id="_3-创建目录结构" tabindex="-1">3. 创建目录结构 <a class="header-anchor" href="#_3-创建目录结构" aria-label="Permalink to &quot;3. 创建目录结构&quot;">​</a></h2><p>我们知道当项目创建好了之后, IDEA 会帮我们自动创建出一些目录.</p><p><img src="'+F+'" alt="An image"></p><p>但是web项目对于目录结构还有直接的要求 光是maven搞出来的目录是不够的 需要手动的创建出一些目录来 <strong>注：目录名和创建的位置是固定的，不能乱写，如果写错了，就不会生效</strong> 创建效果如下： <img src="'+m+`" alt="An image"></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>web.xml</strong>就是<strong>tomcat</strong>能够识别这个动态页面的<strong>入口文件</strong><strong>web.xml中的内容不能为空 里面的写法也是固定的 我们不要修改</strong> 这里的内容是从其它地方复制过来的</p></div><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;!</span><span style="color:#F78C6C;">DOCTYPE</span><span style="color:#89DDFF;"> </span><span style="color:#A6ACCD;">web-app</span><span style="color:#89DDFF;"> PUBLIC</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot; &gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">web-app</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">display-name</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Archetype Created Web Application</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">display-name</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">web-app</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>注：大家copy这段代码后，可能会爆红，这是正常的现象，并没有错 <img src="`+d+'" alt="An image"></p><h2 id="_4-编写代码" tabindex="-1">4. 编写代码 <a class="header-anchor" href="#_4-编写代码" aria-label="Permalink to &quot;4. 编写代码&quot;">​</a></h2><p>这里开始正式编写Java代码</p><ul><li>首先创建一个HelloServlet <img src="'+C+`" alt="An image"></li></ul><p>完整代码如下：</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">javax</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">servlet</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">ServletException</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">javax</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">servlet</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">WebServlet</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">javax</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">servlet</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">http</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">HttpServlet</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">javax</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">servlet</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">http</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">HttpServletRequest</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">javax</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">servlet</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">http</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">HttpServletResponse</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">javax</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">sql</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">rowset</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">serial</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">SerialException</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">io</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">IOException</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">WebServlet</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HelloServlet</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HttpServlet</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">doGet</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">HttpServletRequest</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">req</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">HttpServletResponse</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">resp</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ServletException</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">IOException</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//        super.doGet(req,resp);</span></span>
<span class="line"><span style="color:#A6ACCD;">        resp</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getWriter</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">write</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><strong>注：这里代码完成了，但是不能直接运行，需要借助tomcat才可以运行</strong></p><h2 id="_5-打包程序" tabindex="-1">5. 打包程序 <a class="header-anchor" href="#_5-打包程序" aria-label="Permalink to &quot;5. 打包程序&quot;">​</a></h2><p>先修改pom.xml，加入一些必要的配置，一个打包的类型和打包的名字</p><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!--    要打一个war包--&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">packaging</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">war</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">packaging</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!--    servlet就是war包的名字--&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">build</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">finalName</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">servlet</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">finalName</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">build</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><img src="`+A+'" alt="An image"></p><p>打包的结果在target目录下，如果打包失败了就不能生成出来</p><p><img src="'+b+'" alt="An image"></p><h2 id="_6-部署代码" tabindex="-1">6. 部署代码 <a class="header-anchor" href="#_6-部署代码" aria-label="Permalink to &quot;6. 部署代码&quot;">​</a></h2><p>将程序部署到Tomcat上 将war文件复制到Tomcat的webapps目录中 <img src="'+g+`" alt="An image"></p><h2 id="_7-验证程序-启动tomcat" tabindex="-1">7. 验证程序，启动<strong>Tomcat</strong> <a class="header-anchor" href="#_7-验证程序-启动tomcat" aria-label="Permalink to &quot;7. 验证程序，启动**Tomcat**&quot;">​</a></h2><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">startup</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="`+u+'" alt="An image"></p><p>进入浏览器，来访问当前的这个Servlet生成的动态页面 这里的hello路径为Servlet Path表示这个网站中的一个页面 <img src="'+v+'" alt="An image"></p><p>最后，<strong>这样一来，我们就完成了使用Servlet运行一个hello world！</strong></p>',45),E=[_];function x(S,f,q,w,k,P){return n(),a("div",null,E)}const j=s(h,[["render",x]]);export{I as __pageData,j as default};
